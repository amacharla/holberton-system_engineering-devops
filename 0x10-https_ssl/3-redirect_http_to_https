global
	# error logs goto
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# max num of connections
	maxconn 2048
	# temporary DHE key max size
	tune.ssl.default-dh-param 2048

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option  forwardfor  # adds X-Forwarded-For header
	option  http-server-close  # reduce latency by closing connections
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend www-http
	bind     144.217.246.120:80  # listen on TCP 80 for http
	reqadd   X-Forwarded-Proto:\ http
	default_backend  www-backend

frontend www-https
	bind 		144.217.246.120:443 ssl crt /etc/haproxy/certs/amacharla.space.pem   # listen on TCP 443 ssh, path to ssl cert fullchain.pem + privatekey
	reqadd		X-Forwarded-Proto:\ https
	acl		letsencrypt-acl path_beg /.well-known/acme-challenge/  # auto renew certs
	use_backend	letsencrypt-backend if letsencrypt-acl			# use diff backend for cert renewal
	default_backend	www-backend

backend www-backend
	redirect scheme https code 301 if !{ ssl_fc }  # redirect http -> https with code 301 in location header
	stats enable  # access haproxy stats
	stats uri /haproxy?stats  # uri to access haproxy stats
	balance roundrobin  # algo for load balancing
	server 149-web-01 142.44.167.236:80 check  # servername-ipaddress:port-healthcheck
	server 149-web-02 144.217.246.202:80 check

backend letsencrypt-backend
	server letsencrypt 127.0.0.1:54321  # run the acme-challenge on localhost port 54321
